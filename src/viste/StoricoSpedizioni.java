/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InsFatturaAcquisto.java
 *
 * Created on 6-giu-2012, 20.16.59
 */
package viste;

import contabilizzazione.SaldoIvaMensile;
import controllo.FrontController;
import entita.Entity;
import entita.Fattura;
import entita.Mezzo;
import entita.Spedizione;
import entita.Spedizione.tipo;
import java.awt.Color;
import java.sql.Date;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import libs.DoubleFormatter;

/**
 *
 * @author Andle
 */
public class StoricoSpedizioni extends javax.swing.JDialog {

    /** Creates new form ProspettoIva */
    public StoricoSpedizioni(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Storico spedizioni");
        this.parent = (Spedizioni) parent;
        //setTable();
    }

    private class StoricoSpedizioniTableModel extends DefaultTableModel {
        
        private final boolean[] CAN_EDIT;
        private final Class[] types;
        
        public StoricoSpedizioniTableModel(Object[][] righe, String[] colonne, Class[] tps, boolean[] edit) {
            super(righe, colonne);
            CAN_EDIT = edit;
            types = tps;
        }
 
        public boolean isCellEditable(int rowIndex, int columnIndex) {
            return CAN_EDIT[columnIndex];
        }
               
        @Override
        public Class getColumnClass(int columnIndex) {
            return this.types[columnIndex];
        }

    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAnno = new javax.swing.JPanel();
        cboAnno = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSpedizioni = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        chkNonFatturate = new javax.swing.JCheckBox();
        chkEmesse = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pnlAnno.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Anno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        cboAnno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboAnnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAnnoLayout = new javax.swing.GroupLayout(pnlAnno);
        pnlAnno.setLayout(pnlAnnoLayout);
        pnlAnnoLayout.setHorizontalGroup(
            pnlAnnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAnnoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboAnno, 0, 201, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlAnnoLayout.setVerticalGroup(
            pnlAnnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnnoLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(cboAnno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        tblSpedizioni.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblSpedizioni);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Parametri"));

        chkNonFatturate.setSelected(true);
        chkNonFatturate.setText("Non Fatturate");
        chkNonFatturate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkNonFatturateActionPerformed(evt);
            }
        });

        chkEmesse.setSelected(true);
        chkEmesse.setText("Fatturate");
        chkEmesse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkEmesseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(chkEmesse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(chkNonFatturate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(chkEmesse)
                    .addComponent(chkNonFatturate))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlAnno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 912, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlAnno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jPanel1, pnlAnno});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
    /*Prendo gli anni esercizio in riferimento alle fatture di vendita 
    * eventualmente si può prevedere un metodo che fornisce gli anni esercizio rispetto alle spedizioni
    */
    List<Integer> anni = FrontController.getAnniEsercizioForSpedizioni();
    popolaSelect(anni);
    spedizioniInTable = FrontController.getStoricoSpedizioni((Integer)cboAnno.getSelectedItem(), tipo.ALL);
    setTable();
}//GEN-LAST:event_formWindowOpened

/*
 * Popola la select dei fornitori.
 */
private void popolaSelect(List items) {
    for (Object item : items)
        cboAnno.addItem((Integer)item);
}

private void cboAnnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboAnnoActionPerformed
// TODO add your handling code here:
    setSpedizioniToShow();
    setTable();
}//GEN-LAST:event_cboAnnoActionPerformed

private void chkEmesseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkEmesseActionPerformed
// TODO add your handling code here:
    setSpedizioniToShow();
    setTable();
}//GEN-LAST:event_chkEmesseActionPerformed

private void chkNonFatturateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkNonFatturateActionPerformed
// TODO add your handling code here:ù
    setSpedizioniToShow();
    setTable();
}//GEN-LAST:event_chkNonFatturateActionPerformed

private void setSpedizioniToShow(){
    if (chkEmesse.isSelected())
        if (chkNonFatturate.isSelected())
            spedizioniInTable = FrontController.getStoricoSpedizioni((Integer)cboAnno.getSelectedItem(), tipo.ALL);
        else
            spedizioniInTable = FrontController.getStoricoSpedizioni((Integer)cboAnno.getSelectedItem(), tipo.F);
    else {
        if (chkNonFatturate.isSelected())
            spedizioniInTable = FrontController.getStoricoSpedizioni((Integer)cboAnno.getSelectedItem(), tipo.NF);
        else 
            spedizioniInTable.clear();
    }
    setTable();
}

private void setTable(){
    Object[] arSped = spedizioniInTable.toArray();
    Object[][] arraySped = new Object[arSped.length][Spedizione.NUM_CAMPI];
    
    int contSped = 0;
    for (Object sped : arSped) {
        arraySped[contSped++] = ((Spedizione) sped).toArrayForStorico();
    }
       
    final String[] COLONNE = {
        "NUMERO", "CLIENTE", "BOLLE", "DATA DOCUMENTO", "STATO", "DESCRIZIONE", "TOTALE", "MEZZO", "FATTURA"
    };
    
    boolean[] canEdit = new boolean[] {
            false, false, false, false, false, false, false, false, false
    };
    
    Class[] types = {
            Integer.class, String.class, String.class, Object.class, String.class, String.class, Double.class, String.class, Integer.class
        };
    
    StoricoSpedizioniTableModel model = new StoricoSpedizioniTableModel(arraySped, COLONNE, types, canEdit);
    
    tblSpedizioni.setModel(model);
    tblSpedizioni.setRowSorter(new TableRowSorter(model) {
    
        class DateComparator implements Comparator {

            @Override
            public int compare(Object o1, Object o2) {
                String[] data1_str = ((String) o1).split("/");
                String[] data2_str = ((String) o2).split("/");

                Date data1 = Date.valueOf(data1_str[2] + "-" + data1_str[1] + "-" + data1_str[0]);
                Date data2 = Date.valueOf(data2_str[2] + "-" + data2_str[1] + "-" + data2_str[0]);

                return data1.compareTo(data2);
            }
            
        }

        @Override
        public void sort() {
            setComparator(DATA_DOCUMENTO, new DateComparator());
            setComparator(NUMERO, new Comparator() {

                @Override
                public int compare(Object o1, Object o2) {
                    Integer n1 = Integer.parseInt((String)o1);
                    Integer n2 = Integer.parseInt((String)o2);
                    return n1.compareTo(n2);
                }
            });
            super.sort();
        }
            
    });
    
    jScrollPane1.setViewportView(tblSpedizioni);
    //Settaggio del resize dei campi
    tblSpedizioni.getColumnModel().getColumn(NUMERO).setResizable(true);
    tblSpedizioni.getColumnModel().getColumn(CLIENTE).setResizable(true);
    tblSpedizioni.getColumnModel().getColumn(BOLLE).setResizable(true);
    tblSpedizioni.getColumnModel().getColumn(BOLLE).setResizable(true);
    tblSpedizioni.getColumnModel().getColumn(DATA_DOCUMENTO).setResizable(true);
    tblSpedizioni.getColumnModel().getColumn(STATO).setResizable(true);
    tblSpedizioni.getColumnModel().getColumn(DESCRIZIONE).setResizable(true);
    tblSpedizioni.getColumnModel().getColumn(TOTALE).setResizable(true);
    tblSpedizioni.getColumnModel().getColumn(MEZZO).setResizable(true);
    tblSpedizioni.getColumnModel().getColumn(FATTURA).setResizable(true);
    
    //Settaggio delle width dei campi
    tblSpedizioni.getColumnModel().getColumn(CLIENTE).setPreferredWidth(170);
    tblSpedizioni.getColumnModel().getColumn(DESCRIZIONE).setPreferredWidth(210);
    tblSpedizioni.getColumnModel().getColumn(FATTURA).setResizable(true);
    
    tblSpedizioni.getColumnModel().getColumn(TOTALE).setCellRenderer(new DoubleFormatter());
 
}

private Spedizioni parent; //Indica il jframe delle spedizioni, dal quale è stata istanziata questa (this) jdialog
private List<Spedizione> spedizioniInTable = null;
private final int NUMERO = 0;
private final int CLIENTE = 1;
private final int BOLLE = 2;
private final int DATA_DOCUMENTO = 3;
private final int STATO = 4;
private final int DESCRIZIONE = 5;
private final int TOTALE = 6;
private final int MEZZO = 7;
private final int FATTURA = 8;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboAnno;
    private javax.swing.JCheckBox chkEmesse;
    private javax.swing.JCheckBox chkNonFatturate;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel pnlAnno;
    private javax.swing.JTable tblSpedizioni;
    // End of variables declaration//GEN-END:variables
}
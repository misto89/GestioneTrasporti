/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * InsFatturaAcquisto.java
 *
 * Created on 6-giu-2012, 20.16.59
 */
package viste;

import controllo.FrontController;
import eccezioni.EccezioneChiaveDuplicata;
import eccezioni.EccezioneModificaFattAcquisto;
import eccezioni.EccezioneValoreCampoTroppoLungo;
import entita.Entity;
import entita.Fattura;
import entita.Fornitore;
import entita.Movimento;
import java.sql.Date;
import java.util.LinkedList;
import java.util.List;
import javax.swing.JOptionPane;
import libs.DateUpdate;
import libs.DoubleFormatter;

/**
 *
 * @author Andle
 */
public class InsFatturaAcquisto extends javax.swing.JDialog {

    /** Creates new form InsFatturaAcquisto */
    public InsFatturaAcquisto(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setTitle("Inserimento fattura di acquisto");
        this.parent = (RegistroFattureAcquisto) parent;
        ColorManager color = new ColorManager();
        color.changeColor(pnl);
        dialogVista = this;
    }
    
     public InsFatturaAcquisto(java.awt.Frame parent, boolean modal, Fattura selected) {
        super(parent, modal);
        initComponents();
        String title = String.valueOf(selected.getNumero());
        if (selected.getSpecificaNumero() != null)
            title += "-" + selected.getSpecificaNumero();
        
        this.setTitle("Modifica della fattura di acquisto numero " + title);
        this.parent = (RegistroFattureAcquisto) parent;
        ColorManager color = new ColorManager();
        color.changeColor(pnl);
        toModify = selected;
        btnMemorizza.setText("Salva modifiche");
        dialogVista = this;
    }
     
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnMemorizza = new javax.swing.JButton();
        pnl = new javax.swing.JPanel();
        cboFornitore = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        txtSpecifica = new javax.swing.JTextField();
        txtMeseFatt = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtAnnoFatt = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtGiornoFatt = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtImporto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtSconto = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtIva = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtTotale = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cboMetPag = new javax.swing.JComboBox();
        cboGiorni = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cboTipo = new javax.swing.JComboBox();
        chkPagata = new javax.swing.JCheckBox();
        jLabel6 = new javax.swing.JLabel();
        txtNote = new javax.swing.JTextField();
        txtPercIva = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtNoteMetPag = new javax.swing.JTextField();
        lblNoteMetPag = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtGiornoScadenza = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtMeseScadenza = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtAnnoScadenza = new javax.swing.JTextField();
        txtNum = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnMemorizza.setBackground(new java.awt.Color(255, 255, 255));
        btnMemorizza.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        btnMemorizza.setText("Memorizza");
        btnMemorizza.setMargin(new java.awt.Insets(2, -10, 2, 14));
        btnMemorizza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMemorizzaActionPerformed(evt);
            }
        });

        pnl.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        cboFornitore.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleziona un fornitore" }));
        cboFornitore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboFornitoreActionPerformed(evt);
            }
        });

        jLabel1.setText("Numero");

        txtSpecifica.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtMeseFatt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtMeseFatt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMeseFattFocusLost(evt);
            }
        });

        jLabel13.setText("gg");

        txtAnnoFatt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtAnnoFatt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAnnoFattFocusLost(evt);
            }
        });

        jLabel14.setText("aaaa");

        jLabel11.setText("Data Fattura");

        jLabel12.setText("mm");

        txtGiornoFatt.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGiornoFatt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGiornoFattFocusLost(evt);
            }
        });

        jLabel2.setText("Importo");

        txtImporto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtImporto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtImportoFocusLost(evt);
            }
        });

        jLabel3.setText("Sconto");

        txtSconto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtSconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtScontoFocusLost(evt);
            }
        });

        jLabel4.setText("Iva");

        txtIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtIva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtIvaFocusLost(evt);
            }
        });

        jLabel5.setText("Totale");

        txtTotale.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel9.setText("Pagamento");

        cboGiorni.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0", "30", "35", "40", "45", "50", "55", "60", "65", "70", "75", "80", "85", "90", "95", "100", "105", "110", "115", "120" }));
        cboGiorni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboGiorniActionPerformed(evt);
            }
        });

        jLabel10.setText("Giorni");

        jLabel8.setText("Tipo Fattura");

        cboTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Terzi", "Ricevute", "Stipendi", "Note Credito", "Note Debito", "Polizze", "Varie", "Manutenzione", "Rifornimenti", "Acq. strutture" }));

        chkPagata.setText("Pagata");
        chkPagata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPagataActionPerformed(evt);
            }
        });

        jLabel6.setText("Note");

        txtPercIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtPercIva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPercIvaFocusLost(evt);
            }
        });

        jLabel7.setText("%");

        jLabel15.setText("€");

        txtNoteMetPag.setEnabled(false);

        lblNoteMetPag.setText("Note pagamento");

        jLabel16.setText("€");

        jLabel17.setText("€");

        jLabel18.setText("€");

        jLabel19.setText("Scadenza");

        jLabel20.setText("gg");

        txtGiornoScadenza.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel21.setText("mm");

        txtMeseScadenza.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel22.setText("aaaa");

        txtAnnoScadenza.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txtNum.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout pnlLayout = new javax.swing.GroupLayout(pnl);
        pnl.setLayout(pnlLayout);
        pnlLayout.setHorizontalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPagata))
                .addGap(117, 117, 117))
            .addGroup(pnlLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                .addComponent(cboMetPag, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(120, Short.MAX_VALUE))
            .addGroup(pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel19)
                .addGap(43, 43, 43)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtGiornoScadenza, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMeseScadenza, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel22)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAnnoScadenza, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(114, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLayout.createSequentialGroup()
                .addContainerGap(181, Short.MAX_VALUE)
                .addComponent(txtMeseFatt, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAnnoFatt, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(122, 122, 122))
            .addGroup(pnlLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(cboFornitore, 0, 378, Short.MAX_VALUE)
                .addContainerGap(24, Short.MAX_VALUE))
            .addGroup(pnlLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNoteMetPag)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtNoteMetPag)
                    .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(pnlLayout.createSequentialGroup()
                                .addComponent(txtGiornoFatt, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel12))
                            .addComponent(txtNum))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(121, 121, 121))
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(126, 126, 126))
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(143, 143, 143))
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTotale, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addGroup(pnlLayout.createSequentialGroup()
                                .addComponent(txtPercIva, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel7))
                            .addComponent(txtSconto, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE)
                            .addComponent(txtImporto, javax.swing.GroupLayout.DEFAULT_SIZE, 119, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlLayout.createSequentialGroup()
                                .addComponent(cboGiorni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel10))
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIva, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel15)
                        .addGap(19, 19, 19))
                    .addComponent(txtSpecifica, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel11, jLabel19});

        pnlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {txtSconto, txtTotale});

        pnlLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel5, jLabel9});

        pnlLayout.setVerticalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cboFornitore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSpecifica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13)
                    .addComponent(txtGiornoFatt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtMeseFatt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtAnnoFatt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtImporto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtSconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPercIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTotale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel18))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cboGiorni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(cboMetPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtGiornoScadenza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21)
                    .addComponent(txtMeseScadenza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(txtAnnoScadenza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(chkPagata)
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNoteMetPag, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNoteMetPag))
                .addGap(4, 4, 4)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtNote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMemorizza, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMemorizza)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
protected void popolaSelect(List items) {
    for (Object item : items)
        cboFornitore.addItem((Fornitore) item);

}
    
private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
    List<Entity> fornitori = FrontController.getAnagrafe(Fornitore.class);
    popolaSelect(fornitori);
    String[] metPagam = FrontController.getMetodiPagamento();
    for (int i = 0; i < metPagam.length-1; i++)
        cboMetPag.addItem((String) metPagam[i]);
    
    cboMetPag.setSelectedIndex(1);
    
    txtGiornoFatt.setDocument(new JTextFieldLimit(MAX_LENGTH_GIORNO));
    txtMeseFatt.setDocument(new JTextFieldLimit(MAX_LENGTH_MESE));
    txtAnnoFatt.setDocument(new JTextFieldLimit(MAX_LENGTH_ANNO));
    txtGiornoScadenza.setDocument(new JTextFieldLimit(MAX_LENGTH_GIORNO));
    txtMeseScadenza.setDocument(new JTextFieldLimit(MAX_LENGTH_MESE));
    txtAnnoScadenza.setDocument(new JTextFieldLimit(MAX_LENGTH_ANNO));
    txtPercIva.setDocument(new JTextFieldLimit(MAX_LENGTH_PERCIVA));
    cboFornitore.requestFocus();
    txtPercIva.setText(PERC_IVA.toString());
    lblNoteMetPag.setVisible(false);
    txtNoteMetPag.setVisible(false);
    
    //TEST di rilevazione "," e sostituzione con "."
    txtImporto.setDocument(new JTextFieldFormatDouble());
    txtSconto.setDocument(new JTextFieldFormatDouble());
    txtIva.setDocument(new JTextFieldFormatDouble());
    txtTotale.setDocument(new JTextFieldFormatDouble());
    
    //Scrive i dati della fattura all'interno delle text.
    if (toModify != null){
        cboFornitore.setSelectedItem(toModify.getCliente());
        String[] data = toModify.getData().toString().split("-");
        txtAnnoFatt.setText(data[0]);
        txtMeseFatt.setText(data[1]);
        txtGiornoFatt.setText(data[2]);
        lblNoteMetPag.setVisible(true);
        txtNoteMetPag.setVisible(true);
        txtNoteMetPag.setText(toModify.getNotePag());
        txtNum.setText(String.valueOf(toModify.getNumero()));
        txtSpecifica.setText(toModify.getSpecificaNumero());
        txtImporto.setText(String.valueOf(toModify.getImporto()));
        txtIva.setText(String.valueOf(toModify.getIva()));
        txtSconto.setText(String.valueOf(toModify.getSconto()));
        txtTotale.setText(String.valueOf(toModify.getTotale()));
        txtPercIva.setText(String.valueOf(toModify.getPercIva()));               
        
        if (toModify.getNote() == null)
            txtNote.setText("");
        else
            txtNote.setText(String.valueOf(toModify.getNote()));
        
        chkPagata.setSelected(toModify.getPagata());
        cboTipo.setSelectedItem(toModify.getTipo());
        String[] completeMetPag = toModify.getMetPag().split("-");
        String metPag = completeMetPag[0];
        String days = completeMetPag[1];
        cboMetPag.setSelectedItem(metPag);
        cboGiorni.setSelectedItem(days);
        if (toModify.getPagata()){
            chkPagata.setEnabled(false);
            cboMetPag.setEnabled(false);
            cboGiorni.setEnabled(false);
            lblNoteMetPag.setVisible(true);
            txtNoteMetPag.setVisible(true);
        } 
    }
}//GEN-LAST:event_formWindowOpened

private void cboFornitoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboFornitoreActionPerformed
// TODO add your handling code here:
    txtNum.requestFocus();
    Fornitore forn = null;
    if (cboFornitore.getSelectedIndex() > 0) {
        forn = (Fornitore) cboFornitore.getSelectedItem();
        codFornitore = forn.getCod();
    } else
        codFornitore = 0;
}//GEN-LAST:event_cboFornitoreActionPerformed

private void btnMemorizzaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMemorizzaActionPerformed
// TODO add your handling code here:
    Fattura fatt = createFattura();
    try {
        
        if (toModify != null){
            
            try {
                
                if (FrontController.updateFatturaAcquisto(fatt, toModify)){
                    if (toModify.getPagata() != fatt.getPagata()){
                        //List<Movimento> movimento = new LinkedList<Movimento>();
                        //movimento.add(new Movimento(num, data, Fattura.tipo.ACQ.toString(), (String)cboMetPag.getSelectedItem(), totale, codFornitore));
                        
                        for (Movimento m : movimenti){
                            m.setFornCliente(fatt.getFornitore());
                            m.setData(fatt.getData());
                            m.setNumDoc(fatt.getNumero());
                        }
                        FrontController.updatePagataFattura(Fattura.tipo.ACQ, fatt, fatt.getPagata(), movimenti);
                        movimenti = null;
                        
                    }
                    parent.setFatture();
                    JOptionPane.showMessageDialog(this, "Modifica eseguita con successo");
                    toModify = fatt;
                    dispose();
                    
                } else 
                    JOptionPane.showMessageDialog(this, "Ci sono stati problemi nella modifica, si prega di controllare i dati", "Errore", JOptionPane.ERROR_MESSAGE);
                
            } catch (EccezioneModificaFattAcquisto e) {
                JOptionPane.showMessageDialog(this, e.getMessage(), "Attenzione", JOptionPane.WARNING_MESSAGE);
                parent.setFatture();
                toModify = fatt;
                dispose();
                
            } 
            
        } else {
            if (FrontController.insertFattAcquisto(fatt)) {
                if (fatt.getPagata()) {
                    //List<Movimento> movimento = new LinkedList<Movimento>();
                    //movimento.add(new Movimento(num, data, Fattura.tipo.ACQ.toString(), (String)cboMetPag.getSelectedItem(), totale, codFornitore));
                    for (Movimento m : movimenti){
                        m.setFornCliente(fatt.getFornitore());
                        m.setData(fatt.getData());
                        m.setNumDoc(fatt.getNumero());
                    }
                    FrontController.updatePagataFattura(Fattura.tipo.ACQ, fatt, fatt.getPagata(), movimenti);
                    movimenti = null;                    
                }

                parent.updateCboAnno();
                parent.setFatture();
                JOptionPane.showMessageDialog(this, "Inserimento fattura eseguito con successo");
                cboFornitore.setSelectedIndex(0);
                txtNum.setText(null);
                txtGiornoFatt.setText(null);
                txtMeseFatt.setText(null);
                txtAnnoFatt.setText(null);
                txtImporto.setText(null);
                txtSconto.setText(null);
                txtIva.setText(null);
                txtTotale.setText(null);
                txtSpecifica.setText(null);
                cboMetPag.setSelectedIndex(1);
                cboGiorni.setSelectedIndex(0);
                cboTipo.setSelectedIndex(0);
                chkPagata.setSelected(false);
            } else
                JOptionPane.showMessageDialog(this, "Ci sono stati problemi nell'inserimento, si prega di reinserire i dati", "Errore", JOptionPane.ERROR_MESSAGE);
        }
    } catch (EccezioneChiaveDuplicata e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Chiave duplicata", JOptionPane.ERROR_MESSAGE);
        
    } catch (EccezioneValoreCampoTroppoLungo e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "", JOptionPane.ERROR_MESSAGE);
    }
    
}//GEN-LAST:event_btnMemorizzaActionPerformed

private void txtImportoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtImportoFocusLost
// TODO add your handling code here:
    calculateTotal();
}//GEN-LAST:event_txtImportoFocusLost

private void txtScontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtScontoFocusLost
// TODO add your handling code here:
    calculateTotal();
}//GEN-LAST:event_txtScontoFocusLost

private void txtPercIvaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPercIvaFocusLost
// TODO add your handling code here:
    calculateTotal();
}//GEN-LAST:event_txtPercIvaFocusLost

private void txtIvaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtIvaFocusLost
// TODO add your handling code here:
    //calculateTotal();
    calculateTotalOnForcedIva();
}//GEN-LAST:event_txtIvaFocusLost

private Fattura createFattura(){
    int fornitore = 0;
    if (codFornitore > 0)
        fornitore = codFornitore;
    else {
        JOptionPane.showMessageDialog(this, "Selezionare un fornitore!", "Campo mancante", JOptionPane.WARNING_MESSAGE);
        return null;
    }

    String numero = txtNum.getText();
    if (numero.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Inserire il numero della fattura!", "Campo mancante", JOptionPane.WARNING_MESSAGE);
        return null;
    }

    int num = 0;
    try {
        num = Integer.parseInt(numero);
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Il numero deve essere un numero intero!", "Formato errato", JOptionPane.ERROR_MESSAGE);
        return null;
    }
   
    String specificaNumero = txtSpecifica.getText();

    String anno = txtAnnoFatt.getText();
    String mese = txtMeseFatt.getText();
    String giorno = txtGiornoFatt.getText();

    if (anno.isEmpty() || mese.isEmpty() || giorno.isEmpty()) { //Un o più campi fra gg, mm e aaaa non sono stati inseriti
        JOptionPane.showMessageDialog(null, "Inserire tutti i campi per la data", 
            "Campo obbligatorio mancante", JOptionPane.ERROR_MESSAGE);
        return null;
    }

    if (anno.length() == 2)
        anno = "20" + anno;
    else if (anno.length() == 3)
        anno = "2" + anno;

    if (mese.length() == 1)
        mese = "0" + mese;

    if (giorno.length() == 1)
        giorno = "0" + giorno;

    Date data = null;
    try {
        data = Date.valueOf(anno + "-" + mese + "-"  + giorno);

    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(null, "Valore inserito per la data non valido! Inserire la data nel formato gg/mm/aaaa", 
            "Formato errato", JOptionPane.ERROR_MESSAGE);
            return null;
    }
    
    String annoScad = txtAnnoScadenza.getText();
    String meseScad = txtMeseScadenza.getText();
    String giornoScad = txtGiornoScadenza.getText();

    if (annoScad.isEmpty() || meseScad.isEmpty() || giornoScad.isEmpty()) { //Un o più campi fra gg, mm e aaaa non sono stati inseriti
        JOptionPane.showMessageDialog(null, "Inserire tutti i campi per la data scadenza", 
            "Campo obbligatorio mancante", JOptionPane.ERROR_MESSAGE);
        return null;
    }

    if (annoScad.length() == 2)
        annoScad = "20" + annoScad;
    else if (annoScad.length() == 3)
        annoScad = "2" + annoScad;

    if (meseScad.length() == 1)
        meseScad = "0" + meseScad;

    if (giornoScad.length() == 1)
        giornoScad = "0" + giornoScad;

    Date dataScadenza = null;
    try {
        dataScadenza = Date.valueOf(annoScad + "-" + meseScad + "-"  + giornoScad);

    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(null, "Valore inserito per la data scadenza non valido! Inserire la data nel formato gg/mm/aaaa", 
            "Formato errato", JOptionPane.ERROR_MESSAGE);
            return null;
    }

    String metPag = "Contante-0";
    if (cboMetPag.getSelectedIndex() > 0)
        metPag = String.valueOf(cboMetPag.getSelectedItem()) + "-" + String.valueOf(cboGiorni.getSelectedItem());

    String imp = txtImporto.getText();
    if (imp.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Inserire l'importo della fattura!", "Campo mancante", JOptionPane.WARNING_MESSAGE);
        return null;
    }

    double importo = 0.00;
    try {
        importo = Double.parseDouble(imp);

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "L'importo deve essere un numero decimale!", "Formato errato", JOptionPane.ERROR_MESSAGE);
        return null;
    }

    String sc = txtSconto.getText();
    double sconto = 0.00;
    if (!sc.isEmpty()) {
        try {
            sconto = Double.parseDouble(sc);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Lo sconto deve essere un numero decimale!", "Formato errato", JOptionPane.ERROR_MESSAGE);
            return null;
        }
    }

    String textIva = txtIva.getText();
    if (textIva.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Inserire l'IVA!", "Campo mancante", JOptionPane.WARNING_MESSAGE);
        return null;
    }

    double iva = 0.00;
    try {
        iva = Double.parseDouble(textIva);

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "L'iva deve essere un numero decimale!", "Formato errato", JOptionPane.ERROR_MESSAGE);
        return null;
    }

    String tot = txtTotale.getText();
    if (tot.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Inserire il totale della fattura!", "Campo mancante", JOptionPane.WARNING_MESSAGE);
        return null;
    }    

    double totale = 0.00;
    try {
        totale = Double.parseDouble(tot);

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Il totale deve essere un numero decimale!", "Formato errato", JOptionPane.ERROR_MESSAGE);
        return null;
    }

    String tipo = String.valueOf(cboTipo.getSelectedItem());

    boolean pagata = chkPagata.isSelected();

    String note = txtNote.getText();

    Fattura fattura = new Fattura(num, data, metPag, importo, sconto, iva, totale, tipo, pagata, fornitore, note, dataScadenza, specificaNumero);
    fattura.setCliente(new Fornitore(codFornitore));

    return fattura;
}

private void chkPagataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPagataActionPerformed
// TODO add your handling code here:
    if (chkPagata.isSelected()){
        if (toModify == null){
            //L'utente sta inserendo una nuova fattura
            toInsert = createFattura();
            if (toInsert != null)
                FrontController.open(new NotePagamento(dialogVista, rootPaneCheckingEnabled, toInsert)); 
            else
                chkPagata.setSelected(false);
        } else { //L'utente è in modifica di una fattura
            String metPag = "Contante-0";
            if (cboMetPag.getSelectedIndex() > 0)
                metPag = String.valueOf(cboMetPag.getSelectedItem()) + "-" + String.valueOf(cboGiorni.getSelectedItem());
            toModify.setMetPag(metPag);
            FrontController.open(new NotePagamento(dialogVista, rootPaneCheckingEnabled, toModify));
        }
    } else {
        movimenti = null;
        toInsert = null;
    }
}//GEN-LAST:event_chkPagataActionPerformed

private void txtGiornoFattFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGiornoFattFocusLost
// TODO add your handling code here:
    setDataScadenza();
}//GEN-LAST:event_txtGiornoFattFocusLost

private void txtMeseFattFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMeseFattFocusLost
// TODO add your handling code here:
    setDataScadenza();
}//GEN-LAST:event_txtMeseFattFocusLost

private void txtAnnoFattFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAnnoFattFocusLost
// TODO add your handling code here:
    setDataScadenza();
}//GEN-LAST:event_txtAnnoFattFocusLost

private void cboGiorniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboGiorniActionPerformed
// TODO add your handling code here:
    setDataScadenza();
}//GEN-LAST:event_cboGiorniActionPerformed

private void calculateTotal(){
    importo = Double.parseDouble(txtImporto.getText());
    percIva = Integer.parseInt(txtPercIva.getText());
    if (txtSconto.getText().isEmpty())
        sconto = 0.0;
    else
        sconto = Double.parseDouble(txtSconto.getText());
    
    imponibile = importo - sconto;
    iva = (imponibile * percIva)/100.0;
    
    txtIva.setText(String.valueOf(DoubleFormatter.roundTwoDecimals(iva)));
    txtTotale.setText(String.valueOf(DoubleFormatter.roundTwoDecimals(iva + imponibile)));
    
}
//Funzione che scatta quando il valore in € dell'iva viene forzato dall'utente
private void calculateTotalOnForcedIva(){
    Double ivaFromText = 0.0;
    if (!txtIva.getText().isEmpty()){
         ivaFromText = Double.parseDouble(txtIva.getText());
    }
    
    if (ivaFromText != iva){
        iva = ivaFromText;
    }
    txtTotale.setText(String.valueOf(DoubleFormatter.roundTwoDecimals(iva + imponibile)));
    
}

private void setDataScadenza() {
    
    String giornoFatt = txtGiornoFatt.getText();
    String meseFatt = txtMeseFatt.getText();
    String annoFatt = txtAnnoFatt.getText();
    
    if (!giornoFatt.isEmpty() && !meseFatt.isEmpty() && !annoFatt.isEmpty()) {
        
        if (annoFatt.length() == 2)
            annoFatt = "20" + annoFatt;
        else if (annoFatt.length() == 3)
            annoFatt = "2" + annoFatt;

        if (meseFatt.length() == 1)
            meseFatt = "0" + meseFatt;

        if (giornoFatt.length() == 1)
            giornoFatt = "0" + giornoFatt;
        
        try {
            Date dataFattura = Date.valueOf(annoFatt + "-" + meseFatt + "-" + giornoFatt);
            String[] nuovaScadenza = DateUpdate.update(dataFattura, Integer.parseInt((String) cboGiorni.getSelectedItem())).toString().split("-");
            txtGiornoScadenza.setText(nuovaScadenza[2]);
            txtMeseScadenza.setText(nuovaScadenza[1]);
            txtAnnoScadenza.setText(nuovaScadenza[0]);
            
        } catch (IllegalArgumentException e) {}
    }
}

void unCheckPagate(){
    chkPagata.setSelected(false);
}


    private int codFornitore;
    private RegistroFattureAcquisto parent;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnMemorizza;
    private javax.swing.JComboBox cboFornitore;
    private javax.swing.JComboBox cboGiorni;
    private javax.swing.JComboBox cboMetPag;
    private javax.swing.JComboBox cboTipo;
    private javax.swing.JCheckBox chkPagata;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lblNoteMetPag;
    private javax.swing.JPanel pnl;
    private javax.swing.JTextField txtAnnoFatt;
    private javax.swing.JTextField txtAnnoScadenza;
    private javax.swing.JTextField txtGiornoFatt;
    private javax.swing.JTextField txtGiornoScadenza;
    private javax.swing.JTextField txtImporto;
    private javax.swing.JTextField txtIva;
    private javax.swing.JTextField txtMeseFatt;
    private javax.swing.JTextField txtMeseScadenza;
    private javax.swing.JTextField txtNote;
    private javax.swing.JTextField txtNoteMetPag;
    private javax.swing.JTextField txtNum;
    private javax.swing.JTextField txtPercIva;
    private javax.swing.JTextField txtSconto;
    private javax.swing.JTextField txtSpecifica;
    private javax.swing.JTextField txtTotale;
    // End of variables declaration//GEN-END:variables

    private static final int MAX_LENGTH_GIORNO = 2;
    private static final int MAX_LENGTH_MESE = 2;
    private static final int MAX_LENGTH_ANNO = 4;
    private static final int MAX_LENGTH_PERCIVA = 2;
    private static final Integer PERC_IVA = 21;
    
//    private RegistroFattureAcquisto vista;
    private InsFatturaAcquisto dialogVista;
    
    private Fattura toInsert = null;
    private Fattura toModify = null;
    
    //Lista temporanea di movimenti
    public List<Movimento> movimenti = new LinkedList<Movimento>();
    /*
     * Campi per il calcolo
     */
    private Integer percIva;
    private Double iva;
    private Double importo;
    private Double imponibile;
    private Double sconto;

}
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Mezzi.java
 *
 * Created on 16-apr-2012, 11.00.06
 */
package viste;

import com.itextpdf.text.DocumentException;
import controllo.FrontController;
import eccezioni.EccezioneChiaveDuplicata;
import entita.*;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.sql.Date;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import stampa.StampaMezzi;

/**
 *
 * @author Andle
 */
public class Mezzi extends javax.swing.JFrame {

    /** Creates new form Mezzi */
    public Mezzi() {
        initComponents();
        ColorManager color = new ColorManager();
        color.changeColor(pnlDati);
        txtTarga.setDocument(new JTextFieldLimit(MAX_LENGTH_TARGA));
        txtAnnoAssicurazione.setDocument(new JTextFieldLimit(MAX_LENGTH_ANNO));
        txtAnnoAtp.setDocument(new JTextFieldLimit(MAX_LENGTH_ANNO));
        txtAnnoBollo.setDocument(new JTextFieldLimit(MAX_LENGTH_ANNO));
        txtAnnoRevisione.setDocument(new JTextFieldLimit(MAX_LENGTH_ANNO));
        txtGiornoAssicurazione.setDocument(new JTextFieldLimit(MAX_LENGTH_GIORNO));
        txtGiornoAtp.setDocument(new JTextFieldLimit(MAX_LENGTH_GIORNO));
        txtGiornoBollo.setDocument(new JTextFieldLimit(MAX_LENGTH_GIORNO));
        txtGiornoRevisione.setDocument(new JTextFieldLimit(MAX_LENGTH_GIORNO));
        txtMeseAssicurazione.setDocument(new JTextFieldLimit(MAX_LENGTH_MESE));
        txtMeseAtp.setDocument(new JTextFieldLimit(MAX_LENGTH_MESE));
        txtMeseBollo.setDocument(new JTextFieldLimit(MAX_LENGTH_MESE));
        txtMeseRevisione.setDocument(new JTextFieldLimit(MAX_LENGTH_MESE));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMezzi = new javax.swing.JTable();
        btnNuovo = new javax.swing.JButton();
        btnSalva = new javax.swing.JButton();
        btnElimina = new javax.swing.JButton();
        pnlDati = new javax.swing.JPanel();
        lblTarga5 = new javax.swing.JLabel();
        lblTarga1 = new javax.swing.JLabel();
        lblTarga3 = new javax.swing.JLabel();
        txtMarca = new javax.swing.JTextField();
        lblTarga = new javax.swing.JLabel();
        lblTarga2 = new javax.swing.JLabel();
        txtTarga = new javax.swing.JTextField();
        lblTarga4 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtGiornoBollo = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtMeseBollo = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtAnnoBollo = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        txtGiornoRevisione = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtMeseRevisione = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtAnnoRevisione = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtGiornoAtp = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtMeseAtp = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtAnnoAtp = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtGiornoAssicurazione = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtMeseAssicurazione = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtAnnoAssicurazione = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnuFiltra = new javax.swing.JMenu();
        mnuTutti = new javax.swing.JCheckBoxMenuItem();
        mnuTarga = new javax.swing.JCheckBoxMenuItem();
        mnuProspetto = new javax.swing.JMenu();
        mnuStampa = new javax.swing.JMenuItem();

        setTitle("Anagrafica automezzi propri");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblMezzi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblMezzi);

        btnNuovo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nuovaspedizione.png"))); // NOI18N
        btnNuovo.setText("Nuovo");
        btnNuovo.setToolTipText("Inserisci un nuovo fornitore");
        btnNuovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuovoActionPerformed(evt);
            }
        });

        btnSalva.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/save.png"))); // NOI18N
        btnSalva.setText("Salva");
        btnSalva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvaActionPerformed(evt);
            }
        });

        btnElimina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cancella.png"))); // NOI18N
        btnElimina.setText("Elimina");
        btnElimina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminaActionPerformed(evt);
            }
        });

        pnlDati.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dati", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lblTarga5.setText("Scadenza assicurazione");
        lblTarga5.setToolTipText("");

        lblTarga1.setText("Targa");
        lblTarga1.setToolTipText("");

        lblTarga3.setText("Scadenza revisione");
        lblTarga3.setToolTipText("");

        lblTarga.setText("Marca");
        lblTarga.setToolTipText("");

        lblTarga2.setText("Scadenza bollo");
        lblTarga2.setToolTipText("");

        lblTarga4.setText("Scadenza atp");
        lblTarga4.setToolTipText("");

        jLabel20.setText("gg");

        txtGiornoBollo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel21.setText("mm");

        txtMeseBollo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel22.setText("aaaa");

        txtAnnoBollo.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel23.setText("gg");

        txtGiornoRevisione.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel24.setText("mm");

        txtMeseRevisione.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel25.setText("aaaa");

        txtAnnoRevisione.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel26.setText("gg");

        txtGiornoAtp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel27.setText("mm");

        txtMeseAtp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel28.setText("aaaa");

        txtAnnoAtp.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel29.setText("gg");

        txtGiornoAssicurazione.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel30.setText("mm");

        txtMeseAssicurazione.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel31.setText("aaaa");

        txtAnnoAssicurazione.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        javax.swing.GroupLayout pnlDatiLayout = new javax.swing.GroupLayout(pnlDati);
        pnlDati.setLayout(pnlDatiLayout);
        pnlDatiLayout.setHorizontalGroup(
            pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTarga5)
                    .addComponent(lblTarga4, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTarga3)
                    .addComponent(lblTarga2, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTarga, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTarga1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTarga, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDatiLayout.createSequentialGroup()
                            .addComponent(jLabel20)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtGiornoBollo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(jLabel21)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtMeseBollo, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(32, 32, 32)
                            .addComponent(jLabel22)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtAnnoBollo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlDatiLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGiornoRevisione, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel24)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMeseRevisione, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAnnoRevisione, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDatiLayout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGiornoAtp, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMeseAtp, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAnnoAtp, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDatiLayout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtGiornoAssicurazione, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMeseAssicurazione, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAnnoAssicurazione, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pnlDatiLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {lblTarga, lblTarga1, lblTarga2, lblTarga3, lblTarga4, lblTarga5});

        pnlDatiLayout.setVerticalGroup(
            pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatiLayout.createSequentialGroup()
                .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTarga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTarga1, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTarga, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatiLayout.createSequentialGroup()
                        .addComponent(lblTarga2, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTarga3, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTarga4, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTarga5, javax.swing.GroupLayout.DEFAULT_SIZE, 20, Short.MAX_VALUE))
                    .addGroup(pnlDatiLayout.createSequentialGroup()
                        .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel22)
                                .addComponent(txtAnnoBollo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel21)
                                .addComponent(txtMeseBollo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel20)
                                .addComponent(txtGiornoBollo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel25)
                                .addComponent(txtAnnoRevisione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel24)
                                .addComponent(txtMeseRevisione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel23)
                                .addComponent(txtGiornoRevisione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel28)
                                .addComponent(txtAnnoAtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel27)
                                .addComponent(txtMeseAtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel26)
                                .addComponent(txtGiornoAtp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel31)
                                .addComponent(txtAnnoAssicurazione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel30)
                                .addComponent(txtMeseAssicurazione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlDatiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel29)
                                .addComponent(txtGiornoAssicurazione, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );

        mnuFiltra.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/filtra.png"))); // NOI18N
        mnuFiltra.setText("Filtra");

        mnuTutti.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        mnuTutti.setSelected(true);
        mnuTutti.setText("Mostra tutti");
        mnuTutti.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mostratutto.png"))); // NOI18N
        mnuTutti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTuttiActionPerformed(evt);
            }
        });
        mnuFiltra.add(mnuTutti);

        mnuTarga.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.CTRL_MASK));
        mnuTarga.setSelected(true);
        mnuTarga.setText("Per Targa");
        mnuTarga.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/filtrotarga.png"))); // NOI18N
        mnuTarga.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuTargaActionPerformed(evt);
            }
        });
        mnuFiltra.add(mnuTarga);

        jMenuBar1.add(mnuFiltra);

        mnuProspetto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/prospetto.png"))); // NOI18N
        mnuProspetto.setText("Prospetto");

        mnuStampa.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_P, java.awt.event.InputEvent.CTRL_MASK));
        mnuStampa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/stampa.png"))); // NOI18N
        mnuStampa.setText("Stampa");
        mnuStampa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuStampaActionPerformed(evt);
            }
        });
        mnuProspetto.add(mnuStampa);

        jMenuBar1.add(mnuProspetto);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 844, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNuovo, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalva, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnElimina, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDati, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNuovo)
                    .addComponent(btnSalva)
                    .addComponent(btnElimina))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/*
 * Questo metodo costruisce e popola una tabella con i valori presenti nel parametro. 
 */
private void popolaTabella(List mezzi) {
    Object[] arMezzi = mezzi.toArray();
    Object[][] arrayMezzi = new Object[arMezzi.length][Mezzo.NUM_CAMPI];
    mezziInTabella = new LinkedList<Mezzo>();
    int cont = 0;
    
    for (Object mezzo : arMezzi) {
        arrayMezzi[cont] = ((Mezzo) mezzo).toArray();
        mezziInTabella.add((Mezzo) mezzo);
        cont++;
    }
    
    DefaultTableModel model = new javax.swing.table.DefaultTableModel(
        arrayMezzi,
            
        new String [] {
                "TARGA", "MARCA", "SCADENZA BOLLO ", "SCADENZA REVISIONE ", "SCADENZA ATP ", "SCADENZA ASSICURAZIONE "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            Class[] types = {String.class, String.class, String.class, String.class, String.class, String.class};
            
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }

            @Override
            public Class<?> getColumnClass(int columnIndex) {
                return types[columnIndex];
            }
            
            
    };
    
    /*
     * Crea la tabella
     */
    tblMezzi.setModel(model);
//    tblMezzi.setRowSorter(new TableRowSorter(model));
    
    //Le seguenti costanti indicano i numeri di colonna dei campi
    final int TARGA = 0;
    final int MARCA = 1;
    final int SCAD_BOLLO = 2;
    final int SCAD_REVISIONE = 3;
    final int SCAD_ATP = 4;
    final int SCAD_ASSIC = 5;
    
    boolean[] resizable = {false, false, false, false, false, false};
    
    jScrollPane1.setViewportView(tblMezzi);
    for (int i = TARGA; i < SCAD_ASSIC; i++)
        tblMezzi.getColumnModel().getColumn(i).setResizable(resizable[i]);

    tblMezzi.getTableHeader().setReorderingAllowed(false); //Fa in modo che l'utente non possa modificare l'ordine delle colonne
    tblMezzi.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

    /*
     * Aggiunge un evento alla tabella. In particolare, al click su una cella della tabella,
     * visualizza i valori corrispondenti ai campi della riga selezionata nelle rispettive text.
     */
    tblMezzi.addMouseListener(new MouseAdapter() {
        public void mouseClicked(MouseEvent me) {
            //Estrae dalla tabella i valori dei relativi campi
            String targa = (String) tblMezzi.getValueAt(tblMezzi.getSelectedRow(), TARGA);
            String marca = (String) tblMezzi.getValueAt(tblMezzi.getSelectedRow(), MARCA);
            String scadBollo = (String) tblMezzi.getValueAt(tblMezzi.getSelectedRow(), SCAD_BOLLO);
            String scadRevisione = (String) tblMezzi.getValueAt(tblMezzi.getSelectedRow(), SCAD_REVISIONE);
            String scadAtp = (String) tblMezzi.getValueAt(tblMezzi.getSelectedRow(), SCAD_ATP);
            String scadAssic = (String) tblMezzi.getValueAt(tblMezzi.getSelectedRow(), SCAD_ASSIC);

            pulisciText();
            //Imposta le text con i valori estratti dalla tabella
            txtTarga.setText(targa);
            txtMarca.setText(marca);
            
            String[] scadenza = null;
            
            if (!scadBollo.isEmpty()) {
                scadenza = scadBollo.split("/");
                txtGiornoBollo.setText(scadenza[0]);
                txtMeseBollo.setText(scadenza[1]);
                txtAnnoBollo.setText(scadenza[2]);
            }
            
            if (!scadAtp.isEmpty()) {
                scadenza = scadAtp.split("/");
                txtGiornoAtp.setText(scadenza[0]);
                txtMeseAtp.setText(scadenza[1]);
                txtAnnoAtp.setText(scadenza[2]);
            }
             
            if (!scadAssic.isEmpty()) {
                scadenza = scadAssic.split("/");
                txtGiornoAssicurazione.setText(scadenza[0]);
                txtMeseAssicurazione.setText(scadenza[1]);
                txtAnnoAssicurazione.setText(scadenza[2]);
            }
             
            if (!scadRevisione.isEmpty()) {
                scadenza = scadRevisione.split("/");
                txtGiornoRevisione.setText(scadenza[0]);
                txtMeseRevisione.setText(scadenza[1]);
                txtAnnoRevisione.setText(scadenza[2]);
            }
           
        }
    });
}  
    
/**
  * Questo metodo, che corrisponde all'evento che si innesca con l'apertura del frame, recupera l'elenco di tutte le targhe e
  * popola una tabella con questo elenco.
  */
private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
    mnuTarga.setState(false);
    mnuTutti.setState(true);
    pulisciText();
    List<Entity> mezzi = FrontController.getAnagrafe(Mezzo.class);
    popolaTabella(mezzi);
}//GEN-LAST:event_formWindowOpened

/**
 * Questo evento si verifica alla pressione del tasto Nuovo
 */
private void btnNuovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuovoActionPerformed
// TODO add your handling code here:
    pulisciText();
}//GEN-LAST:event_btnNuovoActionPerformed

/**
 * Questo evento si verifica alla pressione del tasto per il salvataggio.
 * @param evt 
 */
private void btnSalvaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvaActionPerformed
// TODO add your handling code here:
    String targa = txtTarga.getText().toUpperCase();
    String marca = txtMarca.getText();
    Date scadBollo = null;
    Date scadRevisione = null;
    Date scadAtp = null;
    Date scadAssic = null;
    
    Integer ID = null;
    try {
        ID = mezziInTabella.get(tblMezzi.getSelectedRow()).getId();
        
    } catch (IndexOutOfBoundsException e) {}
       
    
    /*
     * Vengono effettuati dei controlli sui valori inseriti, mostrando degli opportuni messaggi nel caso in cui
     * tali valori non rispettano il formato corretto.
     */
    boolean checkData=true;
    if (targa.isEmpty()){
        JOptionPane.showMessageDialog(null, "Inserire la targa!", "Campo obbligatorio mancante", JOptionPane.ERROR_MESSAGE);
        checkData=false;
        return;
        
    } else { 
        if (!targa.isEmpty() && targa.length() != MAX_LENGTH_TARGA){
            JOptionPane.showMessageDialog(null, "La Targa deve contenere " + MAX_LENGTH_TARGA + " caratteri!", "Campo obbligatorio errato", JOptionPane.ERROR_MESSAGE);
            checkData=false;
            return;
        } 
    }
    
    try {
        scadBollo = getData(txtAnnoBollo, txtMeseBollo, txtGiornoBollo, "bollo");
        
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Campo errato o mancante", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        scadRevisione = getData(txtAnnoRevisione, txtMeseRevisione, txtGiornoRevisione, "revisione");
        
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Campo errato o mancante", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        scadAtp = getData(txtAnnoAtp, txtMeseAtp, txtGiornoAtp, "atp");
        
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Campo errato o mancante", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    try {
        scadAssic = getData(txtAnnoAssicurazione, txtMeseAssicurazione, txtGiornoAssicurazione, "assicurazione");
        
    } catch (IllegalArgumentException e) {
        JOptionPane.showMessageDialog(this, e.getMessage(), "Campo errato o mancante", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    /*
     * Se i campi non contengono errori di formato, si cerca di inserire una nuova targa, o di aggiornare 
     * una targa esistente, rispettivamente se non è stata selezionata alcuna riga, o è stata selezionata una 
     * riga della tabella.
     */
    if (checkData){
        Mezzo mezzo = new Mezzo(ID, targa, marca, scadBollo, scadRevisione, scadAtp, scadAssic);
        
        /*
         * Se l'id è != null vuol dire che è stata selezionata una riga dalla tabella, quindi si cerca di 
         * aggiornare il campo rispettivo, altrimenti vuol dire che non è stata selezionata alcuna riga. In 
         * questo caso si cerca di inserire una nuova riga.
         */
        if (ID != null) {
            final int RESPONSE = JOptionPane.showConfirmDialog(null, "Sei sicuro di voler procedere con la modifica?", "Conferma modifica", JOptionPane.OK_CANCEL_OPTION);
            if (RESPONSE == JOptionPane.OK_OPTION) {
                try {
                    if (FrontController.update(mezzo))
                        JOptionPane.showMessageDialog(null, "Modifica eseguita con successo!", "", JOptionPane.INFORMATION_MESSAGE);
                    else
                        JOptionPane.showMessageDialog(null, "Si è verificato un errore durante la modifica", "Errore" ,JOptionPane.ERROR_MESSAGE);
                
                } catch (EccezioneChiaveDuplicata e) {
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Errore" ,JOptionPane.ERROR_MESSAGE);
                }
            }            
        
        } else {
            final int RESPONSE = JOptionPane.showConfirmDialog(null, "Sei sicuro di voler procedere con l'inserimento?", "Conferma inserimento", JOptionPane.OK_CANCEL_OPTION);
            if (RESPONSE == JOptionPane.OK_OPTION) {
                try {
                    if (FrontController.insert(mezzo))
                        JOptionPane.showMessageDialog(null, "Inserimento eseguito con successo!", "", JOptionPane.INFORMATION_MESSAGE);
                    else
                        JOptionPane.showMessageDialog(null, "Si è verificato un errore durante l'inserimento", "Errore" ,JOptionPane.ERROR_MESSAGE);
                
                } catch (EccezioneChiaveDuplicata e) {
                    JOptionPane.showMessageDialog(null, e.getMessage(), "Errore" ,JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        if (mnuTarga.isSelected())
            visualizzaTarga(txtTarga.getText());
        else
            formWindowOpened(null);
        
        pulisciText();
    }
}//GEN-LAST:event_btnSalvaActionPerformed

/**
 * Questo evento si verifica alla pressione del tasto di eliminazione.
 * @param evt 
 */
private void btnEliminaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminaActionPerformed
// TODO add your handling code here:
        /*
         * Se viene generata una eccezione, vuol dire che non è stata selezionata alcuna riga. Quindi è impossibile eliminare una riga
         */
        try {
            Integer ID = mezziInTabella.get(tblMezzi.getSelectedRow()).getId();
            
            /*
             * Viene mostrato un messagio di conferma eliminazione. Se l'utente accetta
             * si cerca di eliminare la targa corrispondente all'id selezionato.
             */
            final int RESPONSE = JOptionPane.showConfirmDialog(null, "Sei sicuro di voler procedere con l'eliminazione?", "Conferma eliminazione", JOptionPane.OK_CANCEL_OPTION);
            if (RESPONSE == JOptionPane.OK_OPTION) {
                Mezzo mezzo = new Mezzo(ID);
                
                //Viene mostrato un messaggio a seconda dell'esito dell'operazione
                if (FrontController.delete(mezzo))
                    JOptionPane.showMessageDialog(null, "Eliminazione eseguita con successo!", "", JOptionPane.INFORMATION_MESSAGE);
                else
                    JOptionPane.showMessageDialog(null, "Si è verificato un errore durante l'eliminazione", "Errore" ,JOptionPane.ERROR_MESSAGE);
    
                if (mnuTarga.isSelected())
                    visualizzaTarga(txtMarca.getText());
                else
                    formWindowOpened(null);
                
                pulisciText();
            }
            
        } catch (ArrayIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "Seleziona una riga da eliminare!", "Attenzione", JOptionPane.WARNING_MESSAGE);
        }
}//GEN-LAST:event_btnEliminaActionPerformed

private void mnuTuttiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTuttiActionPerformed
// TODO add your handling code here:
    formWindowOpened(null);
}//GEN-LAST:event_mnuTuttiActionPerformed

private void visualizzaTarga(String targa) {
    if (targa != null) {
        Mezzo mezzo = FrontController.getMezzo(targa);
        if (mezzo != null) {
            LinkedList mezzi = new LinkedList();
            if (mezzo.getId() != null)
                mezzi.add(mezzo);
            
            popolaTabella(mezzi);
            mnuTarga.setState(true);
            mnuTutti.setState(false);
        } else {
            JOptionPane.showMessageDialog(null, "Si è verificato un errore imprevisto durante la ricerca", "Errore" ,JOptionPane.ERROR_MESSAGE);
            mnuTarga.setState(false);
        }
            
        
    } else {
        mnuTarga.setState(false);
    }
}

private void mnuTargaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuTargaActionPerformed
// TODO add your handling code here:
    String targa = JOptionPane.showInputDialog(null, "Inserire la targa del mezzo da cercare:");
    visualizzaTarga(targa);
}//GEN-LAST:event_mnuTargaActionPerformed

private void mnuStampaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuStampaActionPerformed
// TODO add your handling code here:
    try {
        new StampaMezzi(mezziInTabella).printAndOpen();

    } catch (DocumentException ex) {
        Logger.getLogger(Spedizioni.class.getName()).log(Level.SEVERE, null, ex);
    } catch (IOException ex) {
        Logger.getLogger(Spedizioni.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_mnuStampaActionPerformed

/*
 * Azzera le text
 */
private void pulisciText() {
    txtMarca.setText(null);
    txtTarga.setText(null);
    txtAnnoAssicurazione.setText(null);
    txtAnnoAtp.setText(null);
    txtAnnoBollo.setText(null);
    txtAnnoRevisione.setText(null);
    txtGiornoAssicurazione.setText(null);
    txtGiornoAtp.setText(null);
    txtGiornoBollo.setText(null);
    txtGiornoRevisione.setText(null);
    txtMeseAssicurazione.setText(null);
    txtMeseAtp.setText(null);
    txtMeseBollo.setText(null);
    txtMeseRevisione.setText(null);
    txtTarga.requestFocus();
}

private Date getData(JTextField txtAnno, JTextField txtMese, JTextField txtGiorno, String tipoScadenza) {
    String anno = txtAnno.getText();
    String mese = txtMese.getText();
    String giorno = txtGiorno.getText();
        
    if ( !(anno.isEmpty() && mese.isEmpty() && giorno.isEmpty()) ) { //Non sono tutte tre vuote
        
        if (anno.length() == 2)
            anno = "20" + anno;
        else if (anno.length() == 3)
            anno = "2" + anno;

        if (mese.length() == 1)
            mese = "0" + mese;

        if (giorno.length() == 1)
            giorno = "0" + giorno;
        
        try {
            return Date.valueOf(anno + "-" + mese + "-" + giorno);

        } catch (IllegalArgumentException e) {
            throw new IllegalArgumentException("Inserire la scadenza " + tipoScadenza + " nel formato gg mm aaaa");
          
        }
    }  
    
    return null;
}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnElimina;
    private javax.swing.JButton btnNuovo;
    private javax.swing.JButton btnSalva;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblTarga;
    private javax.swing.JLabel lblTarga1;
    private javax.swing.JLabel lblTarga2;
    private javax.swing.JLabel lblTarga3;
    private javax.swing.JLabel lblTarga4;
    private javax.swing.JLabel lblTarga5;
    private javax.swing.JMenu mnuFiltra;
    private javax.swing.JMenu mnuProspetto;
    private javax.swing.JMenuItem mnuStampa;
    private javax.swing.JCheckBoxMenuItem mnuTarga;
    private javax.swing.JCheckBoxMenuItem mnuTutti;
    private javax.swing.JPanel pnlDati;
    private javax.swing.JTable tblMezzi;
    private javax.swing.JTextField txtAnnoAssicurazione;
    private javax.swing.JTextField txtAnnoAtp;
    private javax.swing.JTextField txtAnnoBollo;
    private javax.swing.JTextField txtAnnoRevisione;
    private javax.swing.JTextField txtGiornoAssicurazione;
    private javax.swing.JTextField txtGiornoAtp;
    private javax.swing.JTextField txtGiornoBollo;
    private javax.swing.JTextField txtGiornoRevisione;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtMeseAssicurazione;
    private javax.swing.JTextField txtMeseAtp;
    private javax.swing.JTextField txtMeseBollo;
    private javax.swing.JTextField txtMeseRevisione;
    private javax.swing.JTextField txtTarga;
    // End of variables declaration//GEN-END:variables

    private List<Mezzo> mezziInTabella;
    
    private static final int MAX_LENGTH_TARGA = 7;
    private static final int MAX_LENGTH_GIORNO = 2;
    private static final int MAX_LENGTH_MESE = 2;
    private static final int MAX_LENGTH_ANNO = 4;
}